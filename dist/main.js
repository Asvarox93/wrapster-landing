"use strict";function showBookeroCategory(o){var e=setInterval(function(){$("#bookero_form_service").length>0&&($.each($("#bookero_form_service optgroup"),function(){-1==$(this).prop("label").indexOf(o)&&($(this).hide(),reloadCalendar())}),clearInterval(e))},500)}function reloadCalendar(){if($("#bookero_form_service option[value='3468']").hide(),$("#bookero_form_service option[value='2707']").prop("selected",!0),"createEvent"in document){var o=document.createEvent("HTMLEvents");o.initEvent("change",!1,!0),document.getElementById("bookero_form_service").dispatchEvent(o)}else document.getElementById("bookero_form_service").fireEvent("onchange")}var bookero_id="dbr1cw2YIlpZ",bookero_container="bookero",bookero_type="calendar",bookero_position="",bookero_plugin_css=!0,bookero_lang="pl",bookero_scripts=document.createElement("script");bookero_scripts.setAttribute("type","text/javascript"),bookero_scripts.setAttribute("src","https://www.bookero.pl/plugin/js/bookero-compiled.js"),document.body.appendChild(bookero_scripts),showBookeroCategory("Szkolenia i warsztaty");
"use strict";
"use strict";
"use strict";$.fn.easeScroll=function(e){!function(){function t(){m.keyboardSupport&&!0&&l("keydown",r)}function a(){if(document.body){var e=document.body,a=document.documentElement,o=window.innerHeight,r=e.scrollHeight;if(v=document.compatMode.indexOf("CSS")>=0?a:e,d=e,t(),b=!0,top!=self)w=!0;else if(r>o&&(e.offsetHeight<=o||a.offsetHeight<=o)){var n=!1;if(a.style.height="auto",setTimeout(function(){n||a.scrollHeight==document.height||(n=!0,setTimeout(function(){a.style.height=document.height+"px",n=!1},100))},10),v.offsetHeight<=o){var i=document.createElement("div");i.style.clear="both",e.appendChild(i)}}m.fixedBackground||h||(e.style.backgroundAttachment="scroll",a.style.backgroundAttachment="scroll")}}function o(e,t,a,o){if(o||(o=1e3),function(e,t){e=e>0?1:-1,t=t>0?1:-1,(g.x!==e||g.y!==t)&&(g.x=e,g.y=t,k=[],D=0)}(t,a),1!=m.accelerationMax){var r=+new Date-D;if(r<m.accelerationDelta){var n=(1+30/r)/2;n>1&&(n=Math.min(n,m.accelerationMax),t*=n,a*=n)}D=+new Date}if(k.push({x:t,y:a,lastX:0>t?.99:-.99,lastY:0>a?.99:-.99,start:+new Date}),!x){var i=e===document.body;z(function r(){for(var n=+new Date,l=0,c=0,u=0;u<k.length;u++){var d=k[u],p=n-d.start,f=p>=m.animationTime,h=f?1:p/m.animationTime;m.pulseAlgorithm&&(h=function(e){return e>=1?1:0>=e?0:(1==m.pulseNormalize&&(m.pulseNormalize/=s(1)),s(e))}(h));var w=d.x*h-d.lastX>>0,g=d.y*h-d.lastY>>0;l+=w,c+=g,d.lastX+=w,d.lastY+=g,f&&(k.splice(u,1),u--)}i?window.scrollBy(l,c):(l&&(e.scrollLeft+=l),c&&(e.scrollTop+=c)),t||a||(k=[]),k.length?z(r,e,o/m.frameRate+1):x=!1},e,0),x=!0}}function r(e){var t=e.target,a=e.ctrlKey||e.altKey||e.metaKey||e.shiftKey&&e.keyCode!==S.spacebar;if(/input|textarea|select|embed/i.test(t.nodeName)||t.isContentEditable||e.defaultPrevented||a)return!0;if(c(t,"button")&&e.keyCode===S.spacebar)return!0;var r=0,n=0,l=i(d),u=l.clientHeight;switch(l==document.body&&(u=window.innerHeight),e.keyCode){case S.up:n=-m.arrowScroll;break;case S.down:n=m.arrowScroll;break;case S.spacebar:n=-(e.shiftKey?1:-1)*u*.9;break;case S.pageup:n=.9*-u;break;case S.pagedown:n=.9*u;break;case S.home:n=-l.scrollTop;break;case S.end:var s=l.scrollHeight-l.scrollTop-u;n=s>0?s+10:0;break;case S.left:r=-m.arrowScroll;break;case S.right:r=m.arrowScroll;break;default:return!0}o(l,r,n),e.preventDefault()}function n(e,t){for(var a=e.length;a--;)M[T(e[a])]=t;return t}function i(e){var t=[],a=v.scrollHeight;do{var o=M[T(e)];if(o)return n(t,o);if(t.push(e),a===e.scrollHeight&&(!w||v.clientHeight+70<a))return n(t,document.body)}while(e=e.parentNode)}function l(e,t,a){window.addEventListener(e,t,a||!1)}function c(e,t){return(e.nodeName||"").toLowerCase()===t.toLowerCase()}function u(e,t){return Math.floor(e/t)==e/t}function s(e){var t,a,o;return 1>(e*=m.pulseScale)?t=e-(1-Math.exp(-e)):(a=Math.exp(-1),e-=1,o=1-Math.exp(-e),t=a+o*(1-a)),t*m.pulseNormalize}var d,p=$.extend({frameRate:60,animationTime:1e3,stepSize:120,pulseAlgorithm:!0,pulseScale:8,pulseNormalize:1,accelerationDelta:20,accelerationMax:1,keyboardSupport:!0,arrowScroll:50,touchpadSupport:!0,fixedBackground:!0},e),f={frameRate:p.frameRate,animationTime:p.animationTime,stepSize:p.stepSize,pulseAlgorithm:p.pulseAlgorithm,pulseScale:p.pulseScale,pulseNormalize:p.pulseNormalize,accelerationDelta:p.accelerationDelta,accelerationMax:p.accelerationMax,keyboardSupport:p.keyboardSupport,arrowScroll:p.arrowScroll,touchpadSupport:p.touchpadSupport,fixedBackground:p.fixedBackground,excluded:""},m=f,h=!1,w=!1,g={x:0,y:0},b=!1,v=document.documentElement,y=[120,120,120],S={left:37,up:38,right:39,down:40,spacebar:32,pageup:33,pagedown:34,end:35,home:36},m=f,k=[],x=!1,D=+new Date,M={};setInterval(function(){M={}},1e4);var H,T=function(){var e=0;return function(t){return t.uniqueID||(t.uniqueID=e++)}}(),z=window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(e,t,a){window.setTimeout(e,a||1e3/60)},A=/chrome|iPad/i.test(window.navigator.userAgent);"onmousewheel"in document&&A&&(l("mousedown",function(e){d=e.target}),l("mousewheel",function(e){b||a();var t=e.target,r=i(t);if(!r||e.defaultPrevented||c(d,"embed")||c(t,"embed")&&/\.pdf/i.test(t.src))return!0;var n=e.wheelDeltaX||0,l=e.wheelDeltaY||0;return n||l||(l=e.wheelDelta||0),!(m.touchpadSupport||!function(e){if(e){e=Math.abs(e),y.push(e),y.shift(),clearTimeout(H);var t=y[0]==y[1]&&y[1]==y[2],a=u(y[0],120)&&u(y[1],120)&&u(y[2],120);return!(t||a)}}(l))||(Math.abs(n)>1.2&&(n*=m.stepSize/120),Math.abs(l)>1.2&&(l*=m.stepSize/120),o(r,-n,-l),void e.preventDefault())}),l("load",a))}()},$("html").easeScroll();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
